{
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "location": "query"
    }
  },
  "documentationLink": "https://firebase.google.com/docs/auth/",
  "protocol": "rest",
  "description": "The Google Identity Toolkit API lets you use open standards to verify a user's identity.",
  "canonicalName": "Identity Toolkit",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "revision": "20210508",
  "name": "identitytoolkit",
  "resources": {
    "accounts": {
      "resources": {
        "mfaSignIn": {
          "methods": {
            "start": {
              "path": "v2/accounts/mfaSignIn:start",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2StartMfaSignInRequest"
              },
              "parameterOrder": [],
              "description": "Sends the MFA challenge",
              "httpMethod": "POST",
              "parameters": {},
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2StartMfaSignInResponse"
              },
              "id": "identitytoolkit.accounts.mfaSignIn.start",
              "flatPath": "v2/accounts/mfaSignIn:start"
            },
            "finalize": {
              "parameterOrder": [],
              "id": "identitytoolkit.accounts.mfaSignIn.finalize",
              "flatPath": "v2/accounts/mfaSignIn:finalize",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Verifies the MFA challenge and performs sign-in",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse"
              },
              "parameters": {},
              "httpMethod": "POST",
              "path": "v2/accounts/mfaSignIn:finalize",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest"
              }
            }
          }
        },
        "mfaEnrollment": {
          "methods": {
            "start": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse"
              },
              "parameters": {},
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the user.",
              "httpMethod": "POST",
              "flatPath": "v2/accounts/mfaEnrollment:start",
              "parameterOrder": [],
              "id": "identitytoolkit.accounts.mfaEnrollment.start",
              "path": "v2/accounts/mfaEnrollment:start"
            },
            "finalize": {
              "httpMethod": "POST",
              "id": "identitytoolkit.accounts.mfaEnrollment.finalize",
              "parameters": {},
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse"
              },
              "description": "Finishes enrolling a second factor for the user.",
              "path": "v2/accounts/mfaEnrollment:finalize",
              "flatPath": "v2/accounts/mfaEnrollment:finalize",
              "parameterOrder": []
            },
            "withdraw": {
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitV2WithdrawMfaRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Revokes one second factor from the enrolled second factors for an account.",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitV2WithdrawMfaResponse"
              },
              "id": "identitytoolkit.accounts.mfaEnrollment.withdraw",
              "path": "v2/accounts/mfaEnrollment:withdraw",
              "parameters": {},
              "parameterOrder": [],
              "httpMethod": "POST",
              "flatPath": "v2/accounts/mfaEnrollment:withdraw"
            }
          }
        }
      }
    },
    "defaultSupportedIdps": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "flatPath": "v2/defaultSupportedIdps",
          "response": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse"
          },
          "path": "v2/defaultSupportedIdps",
          "httpMethod": "GET",
          "id": "identitytoolkit.defaultSupportedIdps.list",
          "description": "List all default supported Idps.",
          "parameters": {
            "pageSize": {
              "location": "query",
              "format": "int32",
              "description": "The maximum number of items to return.",
              "type": "integer"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The next_page_token value returned from a previous List request, if any."
            }
          },
          "parameterOrder": []
        }
      }
    },
    "projects": {
      "resources": {
        "oauthIdpConfigs": {
          "methods": {
            "delete": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "id": "identitytoolkit.projects.oauthIdpConfigs.delete",
              "httpMethod": "DELETE",
              "description": "Delete an Oidc Idp configuration for an Identity Toolkit project.",
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/oauthIdpConfigs/[^/]+$",
                  "description": "The resource name of the config to be deleted, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'."
                }
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/oauthIdpConfigs/[^/]+$",
                  "description": "The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'."
                }
              },
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "id": "identitytoolkit.projects.oauthIdpConfigs.get",
              "description": "Retrieve an Oidc Idp configuration for an Identity Toolkit project."
            },
            "patch": {
              "path": "v2/{+name}",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "id": "identitytoolkit.projects.oauthIdpConfigs.patch",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "description": "Update an Oidc Idp configuration for an Identity Toolkit project.",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.",
                  "required": true,
                  "pattern": "^projects/[^/]+/oauthIdpConfigs/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "PATCH",
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs/{oauthIdpConfigsId}"
            },
            "list": {
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs",
              "description": "List all Oidc Idp configurations for an Identity Toolkit project.",
              "id": "identitytoolkit.projects.oauthIdpConfigs.list",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v2/{+parent}/oauthIdpConfigs",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of items to return.",
                  "format": "int32",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "The parent resource name, for example, \"projects/my-awesome-project\"."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET"
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "id": "identitytoolkit.projects.oauthIdpConfigs.create",
              "httpMethod": "POST",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "description": "Create an Oidc Idp configuration for an Identity Toolkit project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "flatPath": "v2/projects/{projectsId}/oauthIdpConfigs",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
              },
              "path": "v2/{+parent}/oauthIdpConfigs",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "oauthIdpConfigId": {
                  "description": "The id to use for this config.",
                  "type": "string",
                  "location": "query"
                }
              }
            }
          }
        },
        "defaultSupportedIdpConfigs": {
          "methods": {
            "patch": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              },
              "description": "Update a default supported Idp configuration for an Identity Toolkit project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$",
                  "description": "The name of the DefaultSupportedIdpConfig resource, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.patch",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              },
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}"
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The resource name of the config, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                  "pattern": "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.delete",
              "description": "Delete a default supported Idp configuration for an Identity Toolkit project.",
              "httpMethod": "DELETE"
            },
            "get": {
              "path": "v2/{+name}",
              "description": "Retrieve a default supported Idp configuration for an Identity Toolkit project.",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameters": {
                "name": {
                  "description": "The resource name of the config, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                  "pattern": "^projects/[^/]+/defaultSupportedIdpConfigs/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              },
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.get"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              },
              "parameters": {
                "idpId": {
                  "description": "The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "description": "Create a default supported Idp configuration for an Identity Toolkit project.",
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.create",
              "path": "v2/{+parent}/defaultSupportedIdpConfigs",
              "httpMethod": "POST",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
              }
            },
            "list": {
              "parameters": {
                "parent": {
                  "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of items to return.",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/defaultSupportedIdpConfigs",
              "path": "v2/{+parent}/defaultSupportedIdpConfigs",
              "id": "identitytoolkit.projects.defaultSupportedIdpConfigs.list",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "List all default supported Idp configurations for an Identity Toolkit project."
            }
          }
        },
        "inboundSamlConfigs": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of items to return.",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                  "location": "path"
                }
              },
              "description": "List all inbound SAML configurations for an Identity Toolkit project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs",
              "id": "identitytoolkit.projects.inboundSamlConfigs.list",
              "path": "v2/{+parent}/inboundSamlConfigs"
            },
            "create": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "httpMethod": "POST",
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs",
              "parameters": {
                "inboundSamlConfigId": {
                  "type": "string",
                  "description": "The id to use for this config.",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\""
                }
              },
              "path": "v2/{+parent}/inboundSamlConfigs",
              "parameterOrder": [
                "parent"
              ],
              "id": "identitytoolkit.projects.inboundSamlConfigs.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Create an inbound SAML configuration for an Identity Toolkit project."
            },
            "delete": {
              "parameters": {
                "name": {
                  "description": "The resource name of the config to be deleted, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'.",
                  "pattern": "^projects/[^/]+/inboundSamlConfigs/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "identitytoolkit.projects.inboundSamlConfigs.delete",
              "description": "Delete an inbound SAML configuration for an Identity Toolkit project.",
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs/{inboundSamlConfigsId}"
            },
            "patch": {
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs/{inboundSamlConfigsId}",
              "description": "Update an inbound SAML configuration for an Identity Toolkit project.",
              "id": "identitytoolkit.projects.inboundSamlConfigs.patch",
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/inboundSamlConfigs/[^/]+$",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                  "location": "query"
                }
              }
            },
            "get": {
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/inboundSamlConfigs/[^/]+$"
                }
              },
              "description": "Retrieve an inbound SAML configuration for an Identity Toolkit project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "id": "identitytoolkit.projects.inboundSamlConfigs.get",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
              },
              "httpMethod": "GET",
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/inboundSamlConfigs/{inboundSamlConfigsId}"
            }
          }
        },
        "tenants": {
          "resources": {
            "inboundSamlConfigs": {
              "methods": {
                "delete": {
                  "description": "Delete an inbound SAML configuration for an Identity Toolkit project.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$",
                      "description": "The resource name of the config to be deleted, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v2/{+name}",
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs/{inboundSamlConfigsId}"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/inboundSamlConfigs",
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.create",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs",
                  "parameters": {
                    "inboundSamlConfigId": {
                      "description": "The id to use for this config.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                      "required": true,
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Create an inbound SAML configuration for an Identity Toolkit project.",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  }
                },
                "patch": {
                  "path": "v2/{+name}",
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.patch",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs/{inboundSamlConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Update an inbound SAML configuration for an Identity Toolkit project.",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$",
                      "location": "path",
                      "description": "The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "get": {
                  "description": "Retrieve an inbound SAML configuration for an Identity Toolkit project.",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the config, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/tenants/[^/]+/inboundSamlConfigs/[^/]+$"
                    }
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.get",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs/{inboundSamlConfigsId}"
                },
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/inboundSamlConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/inboundSamlConfigs",
                  "description": "List all inbound SAML configurations for an Identity Toolkit project.",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse"
                  },
                  "id": "identitytoolkit.projects.tenants.inboundSamlConfigs.list",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                }
              }
            },
            "defaultSupportedIdpConfigs": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs",
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.create",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  },
                  "path": "v2/{+parent}/defaultSupportedIdpConfigs",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  },
                  "description": "Create a default supported Idp configuration for an Identity Toolkit project.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "idpId": {
                      "location": "query",
                      "description": "The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "description": "List all default supported Idp configurations for an Identity Toolkit project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                      "location": "path",
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.list",
                  "path": "v2/{+parent}/defaultSupportedIdpConfigs"
                },
                "patch": {
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.patch",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  },
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$",
                      "type": "string",
                      "description": "The name of the DefaultSupportedIdpConfig resource, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "description": "Update a default supported Idp configuration for an Identity Toolkit project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The resource name of the config, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\""
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "description": "Retrieve a default supported Idp configuration for an Identity Toolkit project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/tenants/[^/]+/defaultSupportedIdpConfigs/[^/]+$",
                      "description": "The resource name of the config, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\""
                    }
                  },
                  "httpMethod": "DELETE",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Delete a default supported Idp configuration for an Identity Toolkit project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/defaultSupportedIdpConfigs/{defaultSupportedIdpConfigsId}",
                  "id": "identitytoolkit.projects.tenants.defaultSupportedIdpConfigs.delete",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "oauthIdpConfigs": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/oauthIdpConfigs",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs",
                  "description": "List all Oidc Idp configurations for an Identity Toolkit project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "required": true,
                      "description": "The parent resource name, for example, \"projects/my-awesome-project\".",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    }
                  },
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.list",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse"
                  }
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  },
                  "description": "Create an Oidc Idp configuration for an Identity Toolkit project.",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "oauthIdpConfigId": {
                      "type": "string",
                      "description": "The id to use for this config.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"",
                      "pattern": "^projects/[^/]+/tenants/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.create",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v2/{+parent}/oauthIdpConfigs"
                },
                "delete": {
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the config to be deleted, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Delete an Oidc Idp configuration for an Identity Toolkit project."
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  },
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.patch",
                  "description": "Update an Oidc Idp configuration for an Identity Toolkit project.",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "description": "Retrieve an Oidc Idp configuration for an Identity Toolkit project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/tenants/[^/]+/oauthIdpConfigs/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'."
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "id": "identitytoolkit.projects.tenants.oauthIdpConfigs.get",
                  "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}/oauthIdpConfigs/{oauthIdpConfigsId}",
                  "response": {
                    "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
                  }
                }
              }
            }
          },
          "methods": {
            "setIamPolicy": {
              "id": "identitytoolkit.projects.tenants.setIamPolicy",
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "description": "Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource.",
              "request": {
                "$ref": "GoogleIamV1SetIamPolicyRequest"
              },
              "path": "v2/{+resource}:setIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}:setIamPolicy"
            },
            "testIamPermissions": {
              "description": "Returns the caller's permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request.",
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}:testIamPermissions",
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "GoogleIamV1TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "GoogleIamV1TestIamPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "id": "identitytoolkit.projects.tenants.testIamPermissions",
              "parameters": {
                "resource": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                }
              },
              "httpMethod": "POST",
              "path": "v2/{+resource}:testIamPermissions"
            },
            "create": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Create a tenant. Requires write permission on the Agent project.",
              "id": "identitytoolkit.projects.tenants.create",
              "path": "v2/{+parent}/tenants",
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "The parent resource name where the tenant will be created. For example, \"projects/project1\".",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2/projects/{projectsId}/tenants",
              "parameterOrder": [
                "parent"
              ]
            },
            "patch": {
              "request": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "description": "Update a tenant. Requires write permission on the Tenant resource.",
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "path": "v2/{+name}",
              "id": "identitytoolkit.projects.tenants.patch",
              "parameters": {
                "name": {
                  "description": "Output only. Resource name of a tenant. For example: \"projects/{project-id}/tenants/{tenant-id}\"",
                  "required": true,
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "If provided, only update fields set in the update mask. Otherwise, all settable fields will be updated. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "httpMethod": "PATCH"
            },
            "getIamPolicy": {
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}:getIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v2/{+resource}:getIamPolicy",
              "request": {
                "$ref": "GoogleIamV1GetIamPolicyRequest"
              },
              "httpMethod": "POST",
              "description": "Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource.",
              "id": "identitytoolkit.projects.tenants.getIamPolicy",
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "parameters": {
                "resource": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true
                }
              }
            },
            "list": {
              "path": "v2/{+parent}/tenants",
              "flatPath": "v2/projects/{projectsId}/tenants",
              "description": "List tenants under the given agent project. Requires read permission on the Agent project.",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return, capped at 1000. If not specified, the default value is 20."
                },
                "pageToken": {
                  "description": "The pagination token from the response of a previous request.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. The parent resource name to list tenants for.",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "id": "identitytoolkit.projects.tenants.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Resource name of the tenant to retrieve.",
                  "location": "path"
                }
              },
              "id": "identitytoolkit.projects.tenants.get",
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}",
              "description": "Get a tenant. Requires read permission on the Tenant resource."
            },
            "delete": {
              "path": "v2/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/tenants/[^/]+$",
                  "description": "Resource name of the tenant to delete.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Delete a tenant. Requires write permission on the Agent project.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "flatPath": "v2/projects/{projectsId}/tenants/{tenantsId}",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "httpMethod": "DELETE",
              "id": "identitytoolkit.projects.tenants.delete"
            }
          }
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        },
        "https://www.googleapis.com/auth/firebase": {
          "description": "View and administer all your Firebase data and settings"
        }
      }
    }
  },
  "rootUrl": "https://identitytoolkit.googleapis.com/",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://identitytoolkit.mtls.googleapis.com/",
  "batchPath": "batch",
  "schemas": {
    "GoogleCloudIdentitytoolkitAdminV2SpCertificate": {
      "properties": {
        "x509Certificate": {
          "type": "string",
          "description": "Self-signed public certificate."
        },
        "expiresAt": {
          "format": "google-datetime",
          "description": "Timestamp of the cert expiration instance.",
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2SpCertificate",
      "description": "The SP's certificate data for IDP to verify the SAMLRequest generated by the SP.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2WithdrawMfaRequest": {
      "id": "GoogleCloudIdentitytoolkitV2WithdrawMfaRequest",
      "properties": {
        "mfaEnrollmentId": {
          "description": "Required. MFA enrollment id from a current MFA enrollment.",
          "type": "string"
        },
        "idToken": {
          "type": "string",
          "description": "Required. User's ID token."
        },
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant that the user unenrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project."
        }
      },
      "description": "Withdraws MFA.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest": {
      "description": "Finalizes sign-in by verifying MFA challenge.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project."
        },
        "mfaPendingCredential": {
          "type": "string",
          "description": "Required. Pending credential from first factor sign-in."
        },
        "phoneVerificationInfo": {
          "description": "Proof of completion of the SMS based MFA challenge.",
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo"
        }
      }
    },
    "GoogleTypeExpr": {
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "GoogleTypeExpr",
      "properties": {
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        }
      }
    },
    "GoogleCloudIdentitytoolkitV2WithdrawMfaResponse": {
      "description": "Withdraws MultiFactorAuth response.",
      "properties": {
        "idToken": {
          "description": "ID token updated to reflect removal of the second factor.",
          "type": "string"
        },
        "refreshToken": {
          "type": "string",
          "description": "Refresh token updated to reflect removal of the second factor."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2WithdrawMfaResponse"
    },
    "GoogleCloudIdentitytoolkitAdminV2OAuthResponseType": {
      "properties": {
        "idToken": {
          "description": "If true, ID token is returned from IdP's authorization endpoint.",
          "type": "boolean"
        },
        "token": {
          "description": "If true, access token is returned from IdP's authorization endpoint.",
          "type": "boolean"
        },
        "code": {
          "type": "boolean",
          "description": "If true, authorization code is returned from IdP's authorization endpoint."
        }
      },
      "description": "The multiple response type to request for in the OAuth authorization flow. This can possibly be a combination of set bits (e.g. {id_token, token}).",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2OAuthResponseType"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo",
      "properties": {
        "sessionInfo": {
          "type": "string",
          "description": "An opaque string that represents the enrollment session."
        }
      },
      "description": "Phone Verification info for a StartMfa response."
    },
    "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp",
      "properties": {
        "description": {
          "description": "Description of the Idp",
          "type": "string"
        },
        "idpId": {
          "type": "string",
          "description": "Id the of Idp"
        }
      },
      "description": "Standard Identity Toolkit-trusted IDPs."
    },
    "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo": {
      "type": "object",
      "properties": {
        "safetyNetToken": {
          "description": "Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Required for enrollment. Phone number to be enrolled as MFA."
        },
        "iosReceipt": {
          "description": "iOS only. Receipt of successful app token validation with APNS.",
          "type": "string"
        },
        "recaptchaToken": {
          "description": "Web only. Recaptcha solution.",
          "type": "string"
        },
        "iosSecret": {
          "type": "string",
          "description": "iOS only. Secret delivered to iOS app via APNS."
        },
        "autoRetrievalInfo": {
          "description": "Android only. Used by Google Play Services to identify the app for auto-retrieval.",
          "$ref": "GoogleCloudIdentitytoolkitV2AutoRetrievalInfo"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo",
      "description": "App Verification info for a StartMfa request."
    },
    "GoogleIamV1GetIamPolicyRequest": {
      "description": "Request message for `GetIamPolicy` method.",
      "properties": {
        "options": {
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
          "$ref": "GoogleIamV1GetPolicyOptions"
        }
      },
      "type": "object",
      "id": "GoogleIamV1GetIamPolicyRequest"
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse": {
      "type": "object",
      "description": "FinalizeMfaSignIn response.",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse",
      "properties": {
        "refreshToken": {
          "description": "Refresh token for the authenticated user.",
          "type": "string"
        },
        "phoneAuthInfo": {
          "description": "Extra phone auth info, including android verification proof.",
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo"
        },
        "idToken": {
          "description": "ID token for the authenticated user.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig": {
      "type": "object",
      "description": "Configurations options for authenticating with a the standard set of Identity Toolkit-trusted IDPs.",
      "properties": {
        "appleSignInConfig": {
          "description": "Additional config for Apple-based projects.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig"
        },
        "enabled": {
          "type": "boolean",
          "description": "True if allows the user to sign in with the provider."
        },
        "name": {
          "description": "The name of the DefaultSupportedIdpConfig resource, for example: \"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\"",
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "description": "OAuth client secret."
        },
        "clientId": {
          "type": "string",
          "description": "OAuth client ID."
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaSignInResponse": {
      "properties": {
        "phoneResponseInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo",
          "description": "MultiFactor sign-in session information specific to SMS-type second factors. Along with the one-time code retrieved from the sent SMS, the contents of this session information should be passed to FinalizeMfaSignIn to complete the sign in."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2StartMfaSignInResponse",
      "description": "StartMfaSignIn response."
    },
    "GoogleCloudIdentitytoolkitAdminV2IdpConfig": {
      "description": "The SAML IdP (Identity Provider) configuration when the project acts as the relying party.",
      "id": "GoogleCloudIdentitytoolkitAdminV2IdpConfig",
      "properties": {
        "signRequest": {
          "type": "boolean",
          "description": "Indicates if outbounding SAMLRequest should be signed."
        },
        "idpCertificates": {
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2IdpCertificate"
          },
          "type": "array",
          "description": "IDP's public keys for verifying signature in the assertions."
        },
        "ssoUrl": {
          "type": "string",
          "description": "URL to send Authentication request to."
        },
        "idpEntityId": {
          "type": "string",
          "description": "Unique identifier for all SAML entities."
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse": {
      "id": "GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse",
      "description": "Response for ListInboundSamlConfigs",
      "properties": {
        "inboundSamlConfigs": {
          "description": "The set of configs.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object"
    },
    "GoogleIamV1Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "id": "GoogleIamV1Binding",
      "properties": {
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse": {
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse",
      "description": "FinalizeMfaEnrollment response.",
      "type": "object",
      "properties": {
        "idToken": {
          "type": "string",
          "description": "ID token updated to reflect MFA enrollment."
        },
        "refreshToken": {
          "type": "string",
          "description": "Refresh token updated to reflect MFA enrollment."
        },
        "phoneAuthInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig": {
      "properties": {
        "responseType": {
          "description": "The multiple response type to request for in the OAuth authorization flow. This can possibly be a combination of set bits (e.g. {id_token, token}).",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthResponseType"
        },
        "clientId": {
          "description": "The client id of an OAuth client.",
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "description": "The client secret of the OAuth client, to enable OIDC code flow."
        },
        "issuer": {
          "type": "string",
          "description": "For OIDC Idps, the issuer identifier."
        },
        "name": {
          "type": "string",
          "description": "The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests."
        },
        "enabled": {
          "type": "boolean",
          "description": "True if allows the user to sign in with the provider."
        },
        "displayName": {
          "type": "string",
          "description": "The config's display name set by developers."
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig",
      "description": "Configuration options for authenticating with an OAuth IDP.",
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest",
      "description": "Sends MFA enrollment verification SMS for a user.",
      "properties": {
        "tenantId": {
          "description": "The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.",
          "type": "string"
        },
        "phoneEnrollmentInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo",
          "description": "Verification info to authorize sending an SMS for phone verification."
        },
        "idToken": {
          "description": "Required. User's ID token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo": {
      "properties": {
        "androidVerificationProofExpireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Android only. Expiration time of verification proof in seconds."
        },
        "androidVerificationProof": {
          "description": "Android only. Long-lived replacement for valid code tied to android device.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "For Android verification proof."
        }
      },
      "type": "object",
      "description": "Phone Verification info for a FinalizeMfa response.",
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo"
    },
    "GoogleCloudIdentitytoolkitAdminV2HashConfig": {
      "properties": {
        "memoryCost": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.",
          "type": "integer"
        },
        "algorithm": {
          "enumDescriptions": [
            "Default value. Do not use.",
            "HMAC_SHA256",
            "HMAC_SHA1",
            "HMAC_MD5",
            "SCRYPT",
            "PBKDF_SHA1",
            "MD5",
            "HMAC_SHA512",
            "SHA1",
            "BCRYPT",
            "PBKDF2_SHA256",
            "SHA256",
            "SHA512",
            "STANDARD_SCRYPT"
          ],
          "readOnly": true,
          "enum": [
            "HASH_ALGORITHM_UNSPECIFIED",
            "HMAC_SHA256",
            "HMAC_SHA1",
            "HMAC_MD5",
            "SCRYPT",
            "PBKDF_SHA1",
            "MD5",
            "HMAC_SHA512",
            "SHA1",
            "BCRYPT",
            "PBKDF2_SHA256",
            "SHA256",
            "SHA512",
            "STANDARD_SCRYPT"
          ],
          "type": "string",
          "description": "Output only. Different password hash algorithms used in Identity Toolkit."
        },
        "saltSeparator": {
          "description": "Output only. Non-printable character to be inserted between the salt and plain text password in base64.",
          "readOnly": true,
          "type": "string"
        },
        "signerKey": {
          "readOnly": true,
          "description": "Output only. Signer key in base64.",
          "type": "string"
        },
        "rounds": {
          "description": "Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.",
      "id": "GoogleCloudIdentitytoolkitAdminV2HashConfig"
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project."
        },
        "idToken": {
          "description": "Required. ID token.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name which is entered by users to distinguish between different second factors with same type or different type."
        },
        "phoneVerificationInfo": {
          "description": "Verification info to authorize sending an SMS for phone verification.",
          "$ref": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo"
        }
      },
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest",
      "description": "Finishes enrolling a second factor for the user."
    },
    "GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig": {
      "type": "object",
      "description": "Additional config for SignInWithApple.",
      "properties": {
        "codeFlowConfig": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig"
        },
        "bundleIds": {
          "type": "array",
          "description": "A list of Bundle ID's usable by this project",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig"
    },
    "GoogleCloudIdentitytoolkitAdminV2Inheritance": {
      "description": "Settings that the tenants will inherit from project level.",
      "id": "GoogleCloudIdentitytoolkitAdminV2Inheritance",
      "properties": {
        "emailSendingConfig": {
          "type": "boolean",
          "description": "Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations."
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse": {
      "description": "StartMfaEnrollment response.",
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse",
      "properties": {
        "phoneSessionInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo",
          "description": "Verification info to authorize sending an SMS for phone verification."
        }
      }
    },
    "GoogleIamV1Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "GoogleIamV1Policy",
      "type": "object",
      "properties": {
        "bindings": {
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "type": "array",
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
        },
        "auditConfigs": {
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array"
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "id": "GoogleIamV1TestIamPermissionsRequest"
    },
    "GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse": {
      "id": "GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse",
      "description": "Response message for ListTenants.",
      "properties": {
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2Tenant"
          },
          "description": "A list of tenants under the given agent project."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to get the next page of results."
        }
      },
      "type": "object"
    },
    "GoogleCloudIdentitytoolkitV2AutoRetrievalInfo": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitV2AutoRetrievalInfo",
      "description": "The information required to auto-retrieve an SMS.",
      "properties": {
        "appSignatureHash": {
          "type": "string",
          "description": "The Android app's signature hash for Google Play Service's SMS Retriever API."
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig",
      "properties": {
        "idpConfig": {
          "description": "The SAML IdP (Identity Provider) configuration when the project acts as the relying party.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2IdpConfig"
        },
        "displayName": {
          "type": "string",
          "description": "The config's display name set by developers."
        },
        "enabled": {
          "type": "boolean",
          "description": "True if allows the user to sign in with the provider."
        },
        "name": {
          "type": "string",
          "description": "The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests."
        },
        "spConfig": {
          "description": "The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2SpConfig"
        }
      },
      "description": "A pair of SAML RP-IDP configurations when the project acts as the relying party."
    },
    "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse": {
      "description": "Response for ListDefaultSupportedIdps",
      "properties": {
        "defaultSupportedIdps": {
          "description": "The set of configs.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse",
      "type": "object"
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object",
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo": {
      "id": "GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo",
      "type": "object",
      "description": "Phone Verification info for a FinalizeMfa request.",
      "properties": {
        "code": {
          "description": "User-entered verification code.",
          "type": "string"
        },
        "androidVerificationProof": {
          "type": "string",
          "description": "Android only. Uses for \"instant\" phone number verification though GmsCore."
        },
        "sessionInfo": {
          "type": "string",
          "description": "An opaque string that represents the enrollment session."
        },
        "phoneNumber": {
          "description": "Required if Android verification proof is presented.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2SpConfig": {
      "type": "object",
      "description": "The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.",
      "id": "GoogleCloudIdentitytoolkitAdminV2SpConfig",
      "properties": {
        "spEntityId": {
          "type": "string",
          "description": "Unique identifier for all SAML entities."
        },
        "spCertificates": {
          "description": "Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2SpCertificate"
          },
          "readOnly": true
        },
        "callbackUri": {
          "description": "Callback URI where responses from IDP are handled.",
          "type": "string"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse": {
      "type": "object",
      "description": "Response for ListOAuthIdpConfigs",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "oauthIdpConfigs": {
          "type": "array",
          "description": "The set of configs.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig"
          }
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse"
    },
    "GoogleIamV1AuditConfig": {
      "id": "GoogleIamV1AuditConfig",
      "type": "object",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
    },
    "GoogleCloudIdentitytoolkitV2StartMfaSignInRequest": {
      "id": "GoogleCloudIdentitytoolkitV2StartMfaSignInRequest",
      "properties": {
        "tenantId": {
          "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.",
          "type": "string"
        },
        "phoneSignInInfo": {
          "$ref": "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo",
          "description": "Verification info to authorize sending an SMS for phone verification."
        },
        "mfaPendingCredential": {
          "type": "string",
          "description": "Required. Pending credential from first factor sign-in."
        },
        "mfaEnrollmentId": {
          "type": "string",
          "description": "Required. MFA enrollment id from the user's list of current MFA enrollments."
        }
      },
      "type": "object",
      "description": "Starts multi-factor sign-in by sending the multi-factor auth challenge."
    },
    "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse": {
      "description": "Response for DefaultSupportedIdpConfigs",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "defaultSupportedIdpConfigs": {
          "description": "The set of configs.",
          "items": {
            "$ref": "GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse"
    },
    "GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig": {
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig",
      "description": "Additional config for Apple for code flow.",
      "properties": {
        "teamId": {
          "description": "Apple Developer Team ID.",
          "type": "string"
        },
        "keyId": {
          "description": "Key ID for the private key.",
          "type": "string"
        },
        "privateKey": {
          "type": "string",
          "description": "Private key used for signing the client secret JWT."
        }
      }
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "Illegal State, should not be used.",
            "Multi-factor authentication cannot be used for this project",
            "Multi-factor authentication can be used for this project",
            "Multi-factor authentication is required for this project. Users from this project must authenticate with the second factor."
          ],
          "description": "Whether MultiFactor Authentication has been enabled for this project.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DISABLED",
            "ENABLED",
            "MANDATORY"
          ]
        },
        "enabledProviders": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Illegal Provider, should not be used",
              "SMS is enabled as a second factor for this project."
            ],
            "enum": [
              "PROVIDER_UNSPECIFIED",
              "PHONE_SMS"
            ],
            "type": "string"
          },
          "description": "A list of usable second factors for this project."
        }
      },
      "type": "object",
      "id": "GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig",
      "description": "Options related to MultiFactor Authentication for the project."
    },
    "GoogleCloudIdentitytoolkitAdminV2IdpCertificate": {
      "type": "object",
      "description": "The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.",
      "properties": {
        "x509Certificate": {
          "description": "The x509 certificate",
          "type": "string"
        }
      },
      "id": "GoogleCloudIdentitytoolkitAdminV2IdpCertificate"
    },
    "GoogleIamV1AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "id": "GoogleIamV1AuditLogConfig",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "logType": {
          "type": "string",
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        }
      }
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "properties": {
        "updateMask": {
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "format": "google-fieldmask"
        },
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        }
      },
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "id": "GoogleIamV1SetIamPolicyRequest"
    },
    "GoogleIamV1GetPolicyOptions": {
      "type": "object",
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "id": "GoogleIamV1GetPolicyOptions",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudIdentitytoolkitAdminV2Tenant": {
      "type": "object",
      "description": "A Tenant contains configuration for the tenant in a multi-tenant project.",
      "id": "GoogleCloudIdentitytoolkitAdminV2Tenant",
      "properties": {
        "name": {
          "description": "Output only. Resource name of a tenant. For example: \"projects/{project-id}/tenants/{tenant-id}\"",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the tenant."
        },
        "mfaConfig": {
          "description": "The tenant-level configuration of MFA options.",
          "$ref": "GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig"
        },
        "hashConfig": {
          "readOnly": true,
          "$ref": "GoogleCloudIdentitytoolkitAdminV2HashConfig",
          "description": "Output only. Hash config information of a tenant for display on Pantheon. This can only be displayed on Pantheon to avoid the sensitive information to get accidentally leaked. Only returned in GetTenant response to restrict reading of this information. Requires firebaseauth.configs.getHashConfig permission on the agent project for returning this field."
        },
        "enableEmailLinkSignin": {
          "description": "Whether to enable email link user authentication.",
          "type": "boolean"
        },
        "testPhoneNumbers": {
          "description": "A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "inheritance": {
          "$ref": "GoogleCloudIdentitytoolkitAdminV2Inheritance",
          "description": "Specify the settings that the tenant could inherit."
        },
        "enableAnonymousUser": {
          "type": "boolean",
          "description": "Whether to enable anonymous user authentication."
        },
        "allowPasswordSignup": {
          "type": "boolean",
          "description": "Whether to allow email/password user authentication."
        },
        "disableAuth": {
          "description": "Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.",
          "type": "boolean"
        }
      }
    }
  },
  "basePath": "",
  "version": "v2",
  "servicePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "baseUrl": "https://identitytoolkit.googleapis.com/",
  "title": "Identity Toolkit API",
  "ownerDomain": "google.com",
  "id": "identitytoolkit:v2",
  "ownerName": "Google"
}
